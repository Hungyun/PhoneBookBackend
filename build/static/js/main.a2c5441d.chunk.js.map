{"version":3,"sources":["components/Person.js","services/persons.js","App.js","index.js"],"names":["Person","person","onClick","name","number","value","id","baseUrl","axios","get","then","response","data","newObject","post","put","deleteUrl","delete","Filter","props","searchString","onChange","handleSearchString","Notification","message","className","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","personsToShow","map","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchString","errorMessage","setErrorMessage","useEffect","personService","initialPersons","console","log","length","filter","includes","event","target","preventDefault","adding","forEach","object","repeatId","window","confirm","find","p","changedPerson","returnedPerson","concat","deleteId","copytest","arr","Object","values","index","i","splice","catch","error","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2c5441d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, onClick}) => {\n    return (\n        <>\n        {person.name} {person.number} \n        <button name={person.name} value={person.id} onClick={onClick}>delete</button>\n        <br/>\n        </>\n    )\n  }\n  \n  export default Person","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\nconst deletePerson=(id) =>{\n    const deleteUrl = `${baseUrl}/${id}`\n    const request = axios.delete(deleteUrl)\n    return request.then(response=>response)\n} \n\nexport default { getAll, create, update, deletePerson}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Person from './components/Person'\nimport personService from './services/persons'\n\nconst Filter = (props) =>{\n  return(\n    <div>filter shown with<input value={props.searchString} onChange={props.handleSearchString}/></div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst PersonForm = (props) =>{\n  return(\n    <form onSubmit={props.addPerson}>\n    <div>name: <input value={props.newName} onChange={props.handleNameChange}/></div>\n    <div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Persons = (props) =>{\n  return(\n    <>\n    {props.personsToShow.map(person => <Person key={person.id} person={person} onClick={props.onClick}/>\n                             )\n     }\n    </>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchString, setSearchString ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n  console.log('after rendering: persons are: ',persons)\n\n  // dealing with form submitting\n  const addPerson = (event) =>{\n    event.preventDefault()\n    let adding = true\n    let updating = false\n    persons.forEach(function(object){\n      if(object.name === newName){\n        adding = false\n        const repeatId = object.id\n        updating = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      \n        if(updating){\n          const person = persons.find(p=>p.id===repeatId)\n          const changedPerson = {...person, number: newNumber}\n          personService\n          .update(repeatId, changedPerson)\n          .then(returnedPerson =>{\n            setPersons(persons.map(person => person.id !== repeatId ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          }\n    }\n    })\n    if(adding){\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setErrorMessage(`Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n  }\n\n  const deletePerson=(event)=>{\n    const deleteId = event.target.value\n    const message = `Delete ${event.target.name} ?`\n    const result = window.confirm(message);\n    if(result){\n\n    const copytest = {...persons}\n    const arr = Object.values(copytest)\n\n    let index = -1\n\n    for(let i =0; i<arr.length;i++){\n      if(arr[i].id==deleteId){\n        index=i\n      }\n    }\n    arr.splice(index,1)\n\n    personService\n    .deletePerson(deleteId)\n    .then(response=>{\n      setPersons(arr)\n      })\n    .catch(error => {\n      setErrorMessage(\n        `Information of '${event.target.name}' was already removed from server`\n      )\n      setPersons(arr)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })\n    }\n    }\n \n\n  const handleNameChange = (event) =>{\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) =>{\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleSearchString = (event) =>{\n    console.log(event.target.value)\n    setSearchString(event.target.value)\n  }\n  // filtering person list after user typing some keyword\n  const personsToShow = persons.filter(person => person.name.includes(searchString)===true)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter searchString={searchString} \n              handleSearchString={handleSearchString}\n      />\n      \n      <h3>add a new</h3>\n      <PersonForm addPerson={addPerson} \n                  newName={newName} \n                  handleNameChange={handleNameChange}\n                  newNumber={newNumber}\n                  handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} onClick={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}